# Generated by Django 4.0.6 on 2023-12-27 22:19

import django.core.validators
from django.db import migrations, models
import teams.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AthleteInvitation',
            fields=[
                ('email', models.EmailField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(default=False)),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AthleteMarkForEvent',
            fields=[
                ('mark', models.PositiveIntegerField(default=7, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('attendance', models.CharField(choices=[('1', '-----'), ('2', 'Attended'), ('3', 'Did not attend'), ('4', 'ill'), ('5', 'Injury'), ('6', 'Not required'), ('7', 'Other')], db_index=True, default='1', max_length=2)),
                ('email_notification_sent', models.BooleanField(db_index=True, default=False)),
                ('short_note', models.TextField(blank=True, max_length=500, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('title', models.CharField(blank=True, max_length=200)),
                ('type', models.CharField(choices=[('1', 'Practice'), ('2', 'Game'), ('3', 'Training Camp'), ('4', 'Other')], db_index=True, default='1', max_length=2)),
                ('location', models.CharField(blank=True, max_length=70, null=True)),
                ('start_time', models.DateTimeField(db_index=True)),
                ('comment', models.TextField(blank=True, max_length=2000, null=True)),
                ('send_email_notification', models.BooleanField(db_index=True, default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('email', models.EmailField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(default=False)),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLink',
            fields=[
                ('title', models.CharField(max_length=140)),
                ('url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhysicalAssessment',
            fields=[
                ('physical_assessment_title', models.CharField(max_length=70)),
                ('assessment_type', models.CharField(choices=[('time', 'Time'), ('score', 'Score'), ('distance', 'Distance')], db_index=True, default='score', max_length=10)),
                ('best_score_lower', models.BooleanField(db_index=True, default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhysicalAssessmentRecord',
            fields=[
                ('physical_assessment_date', models.DateField(db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhysicalAssessmentScore',
            fields=[
                ('score', models.FloatField(blank=True, db_index=True, null=True)),
                ('time', models.DurationField(blank=True, db_index=True, null=True)),
                ('distance', models.FloatField(blank=True, db_index=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TacticImage',
            fields=[
                ('play', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(15)])),
                ('image', models.ImageField(upload_to=teams.models.team_tactic_image_upload_path)),
                ('description', models.TextField()),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('teamSportType', models.CharField(choices=[('1', 'Basketball'), ('2', 'Football'), ('3', 'Hockey'), ('4', 'Volleyball'), ('5', 'Floorball'), ('6', 'Other Sport')], db_index=True, default='1', max_length=2)),
                ('teamName', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('team_image', models.ImageField(blank=True, default='teams/blank-team.jpeg', null=True, upload_to=teams.models.team_image_upload_path)),
                ('birth_year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1950), django.core.validators.MaxValueValidator(2050)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('country', models.CharField(choices=[('AL', 'Albania'), ('AD', 'Andorra'), ('AT', 'Austria'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BA', 'Bosnia and Herzegovina'), ('BG', 'Bulgaria'), ('CA', 'Canada'), ('HR', 'Croatia'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('EE', 'Estonia'), ('FO', 'Faroe Islands'), ('FI', 'Finland'), ('FR', 'France'), ('DE', 'Germany'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GG', 'Guernsey'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IE', 'Ireland'), ('IT', 'Italy'), ('JE', 'Jersey'), ('LV', 'Latvia'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MK', 'North Macedonia'), ('MT', 'Malta'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('ME', 'Montenegro'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('PL', 'Poland'), ('PT', 'Portugal'), ('RO', 'Romania'), ('RU', 'Russia'), ('SM', 'San Marino'), ('RS', 'Serbia'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('ES', 'Spain'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('UA', 'Ukraine'), ('GB', 'United Kingdom'), ('US', 'United States')], default='LV', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('role', models.CharField(choices=[('1', 'Athlete'), ('2', 'Coach'), ('3', 'Staff'), ('4', 'Owner')], db_index=True, default='1', max_length=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('number', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99)])),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamNotification',
            fields=[
                ('title', models.CharField(max_length=140)),
                ('message', models.TextField(max_length=1500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamSeason',
            fields=[
                ('current_season', models.BooleanField(db_index=True, default=False)),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamTactic',
            fields=[
                ('title', models.CharField(max_length=200)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('public', models.BooleanField(db_index=True, default=False)),
            ],
        ),
    ]
